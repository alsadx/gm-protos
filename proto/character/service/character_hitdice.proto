syntax = "proto3";
package character_hitdice.v1;

option go_package = "github.com/alsadx/gm-protos/gen/go/characterv1/service/character-hitdice";

import "character/character.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

service CharacterHitDiceService {
  // GetHitDice retrieves current hit dice state for a character
  rpc GetHitDice(CharacterID) returns (HitDiceResponse) {
    option (google.api.http) = {
      get: "/v1/characters/{id}/hitdice"
    };
  }

  // AddHitDice adds hit dice of specified type to a character
  rpc AddHitDice(HitDiceRequest) returns (HitDiceResponse) {
    option (google.api.http) = {
      post: "/v1/characters/{id}/hitdice/add"
      body: "dice_type"
    };
  }

  // RemoveHitDice removes hit dice of specified type from a character
  rpc RemoveHitDice(HitDiceRequest) returns (HitDiceResponse) {
    option (google.api.http) = {
      post: "/v1/characters/{id}/hitdice/remove"
      body: "dice_type"
    };
  }

  // RollHitDice rolls specified hit dice and returns the result
  rpc RollHitDice(HitDiceMapRequest) returns (RollHitDiceResponse) {
    option (google.api.http) = {
      post: "/v1/characters/{id}/hitdice/roll"
      body: "amount_dice"
    };
  }

  // ResetHitDice resets all hit dice to maximum for the character
  rpc ResetHitDice(HitDiceMapRequest) returns (HitDiceResponse) {
    option (google.api.http) = {
      post: "/v1/characters/{id}/hitdice/reset"
      body: "*"
    };
  }
}

message CharacterID {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message HitDiceRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  int32 dice_type = 2 [(google.api.field_behavior) = REQUIRED];
}

message HitDiceMapRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  map<int32, int32> amount_dice = 2;
}

message HitDiceResponse {
  map<int32, character.Amount> hit_dice = 1;
}

message RollHitDiceResponse {
  repeated int32 results = 1;
  int32 bonus = 2;
  map<int32, character.Amount> hit_dice = 3;
}