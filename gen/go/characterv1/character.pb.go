// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: character/character.proto

package characterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Score struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          int32                  `protobuf:"varint,1,opt,name=base,proto3" json:"base,omitempty"`
	Bonus         int32                  `protobuf:"varint,2,opt,name=bonus,proto3" json:"bonus,omitempty"`
	Mod           int32                  `protobuf:"varint,3,opt,name=mod,proto3" json:"mod,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Score) Reset() {
	*x = Score{}
	mi := &file_character_character_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{0}
}

func (x *Score) GetBase() int32 {
	if x != nil {
		return x.Base
	}
	return 0
}

func (x *Score) GetBonus() int32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *Score) GetMod() int32 {
	if x != nil {
		return x.Mod
	}
	return 0
}

type Skill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bonus         int32                  `protobuf:"varint,1,opt,name=bonus,proto3" json:"bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Skill) Reset() {
	*x = Skill{}
	mi := &file_character_character_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{1}
}

func (x *Skill) GetBonus() int32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

type Ability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         *Score                 `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	Skills        map[string]*Skill      `protobuf:"bytes,2,rep,name=skills,proto3" json:"skills,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ability) Reset() {
	*x = Ability{}
	mi := &file_character_character_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ability) ProtoMessage() {}

func (x *Ability) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ability.ProtoReflect.Descriptor instead.
func (*Ability) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{2}
}

func (x *Ability) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *Ability) GetSkills() map[string]*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type LevelSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentExp    int32                  `protobuf:"varint,1,opt,name=current_exp,json=currentExp,proto3" json:"current_exp,omitempty"`
	CurrentLvl    int32                  `protobuf:"varint,2,opt,name=current_lvl,json=currentLvl,proto3" json:"current_lvl,omitempty"`
	EarnedLvl     int32                  `protobuf:"varint,3,opt,name=earned_lvl,json=earnedLvl,proto3" json:"earned_lvl,omitempty"`
	NextThreshold int32                  `protobuf:"varint,4,opt,name=next_threshold,json=nextThreshold,proto3" json:"next_threshold,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelSystem) Reset() {
	*x = LevelSystem{}
	mi := &file_character_character_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelSystem) ProtoMessage() {}

func (x *LevelSystem) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelSystem.ProtoReflect.Descriptor instead.
func (*LevelSystem) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{3}
}

func (x *LevelSystem) GetCurrentExp() int32 {
	if x != nil {
		return x.CurrentExp
	}
	return 0
}

func (x *LevelSystem) GetCurrentLvl() int32 {
	if x != nil {
		return x.CurrentLvl
	}
	return 0
}

func (x *LevelSystem) GetEarnedLvl() int32 {
	if x != nil {
		return x.EarnedLvl
	}
	return 0
}

func (x *LevelSystem) GetNextThreshold() int32 {
	if x != nil {
		return x.NextThreshold
	}
	return 0
}

type Amount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxAvailable  int32                  `protobuf:"varint,1,opt,name=max_available,json=maxAvailable,proto3" json:"max_available,omitempty"`
	Available     int32                  `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Amount) Reset() {
	*x = Amount{}
	mi := &file_character_character_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{4}
}

func (x *Amount) GetMaxAvailable() int32 {
	if x != nil {
		return x.MaxAvailable
	}
	return 0
}

func (x *Amount) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

type HealthPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentHp     int32                  `protobuf:"varint,1,opt,name=current_hp,json=currentHp,proto3" json:"current_hp,omitempty"`
	MaxHp         int32                  `protobuf:"varint,2,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
	TempHp        int32                  `protobuf:"varint,3,opt,name=temp_hp,json=tempHp,proto3" json:"temp_hp,omitempty"`
	HitDice       map[int32]*Amount      `protobuf:"bytes,4,rep,name=hit_dice,json=hitDice,proto3" json:"hit_dice,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthPoint) Reset() {
	*x = HealthPoint{}
	mi := &file_character_character_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthPoint) ProtoMessage() {}

func (x *HealthPoint) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthPoint.ProtoReflect.Descriptor instead.
func (*HealthPoint) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{5}
}

func (x *HealthPoint) GetCurrentHp() int32 {
	if x != nil {
		return x.CurrentHp
	}
	return 0
}

func (x *HealthPoint) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *HealthPoint) GetTempHp() int32 {
	if x != nil {
		return x.TempHp
	}
	return 0
}

func (x *HealthPoint) GetHitDice() map[int32]*Amount {
	if x != nil {
		return x.HitDice
	}
	return nil
}

type Character struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner         int64                  `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	IsKnocked     bool                   `protobuf:"varint,3,opt,name=is_knocked,json=isKnocked,proto3" json:"is_knocked,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ClassName     string                 `protobuf:"bytes,5,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Subclass      string                 `protobuf:"bytes,6,opt,name=subclass,proto3" json:"subclass,omitempty"`
	Race          string                 `protobuf:"bytes,7,opt,name=race,proto3" json:"race,omitempty"`
	Lvl           *LevelSystem           `protobuf:"bytes,8,opt,name=lvl,proto3" json:"lvl,omitempty"`
	Stats         map[string]*Ability    `protobuf:"bytes,9,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Health        *HealthPoint           `protobuf:"bytes,10,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Character) Reset() {
	*x = Character{}
	mi := &file_character_character_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{6}
}

func (x *Character) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Character) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Character) GetIsKnocked() bool {
	if x != nil {
		return x.IsKnocked
	}
	return false
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Character) GetSubclass() string {
	if x != nil {
		return x.Subclass
	}
	return ""
}

func (x *Character) GetRace() string {
	if x != nil {
		return x.Race
	}
	return ""
}

func (x *Character) GetLvl() *LevelSystem {
	if x != nil {
		return x.Lvl
	}
	return nil
}

func (x *Character) GetStats() map[string]*Ability {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Character) GetHealth() *HealthPoint {
	if x != nil {
		return x.Health
	}
	return nil
}

var File_character_character_proto protoreflect.FileDescriptor

const file_character_character_proto_rawDesc = "" +
	"\n" +
	"\x19character/character.proto\x12\tcharacter\"C\n" +
	"\x05Score\x12\x12\n" +
	"\x04base\x18\x01 \x01(\x05R\x04base\x12\x14\n" +
	"\x05bonus\x18\x02 \x01(\x05R\x05bonus\x12\x10\n" +
	"\x03mod\x18\x03 \x01(\x05R\x03mod\"\x1d\n" +
	"\x05Skill\x12\x14\n" +
	"\x05bonus\x18\x01 \x01(\x05R\x05bonus\"\xb6\x01\n" +
	"\aAbility\x12&\n" +
	"\x05score\x18\x01 \x01(\v2\x10.character.ScoreR\x05score\x126\n" +
	"\x06skills\x18\x02 \x03(\v2\x1e.character.Ability.SkillsEntryR\x06skills\x1aK\n" +
	"\vSkillsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.character.SkillR\x05value:\x028\x01\"\x95\x01\n" +
	"\vLevelSystem\x12\x1f\n" +
	"\vcurrent_exp\x18\x01 \x01(\x05R\n" +
	"currentExp\x12\x1f\n" +
	"\vcurrent_lvl\x18\x02 \x01(\x05R\n" +
	"currentLvl\x12\x1d\n" +
	"\n" +
	"earned_lvl\x18\x03 \x01(\x05R\tearnedLvl\x12%\n" +
	"\x0enext_threshold\x18\x04 \x01(\x05R\rnextThreshold\"K\n" +
	"\x06Amount\x12#\n" +
	"\rmax_available\x18\x01 \x01(\x05R\fmaxAvailable\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\x05R\tavailable\"\xeb\x01\n" +
	"\vHealthPoint\x12\x1d\n" +
	"\n" +
	"current_hp\x18\x01 \x01(\x05R\tcurrentHp\x12\x15\n" +
	"\x06max_hp\x18\x02 \x01(\x05R\x05maxHp\x12\x17\n" +
	"\atemp_hp\x18\x03 \x01(\x05R\x06tempHp\x12>\n" +
	"\bhit_dice\x18\x04 \x03(\v2#.character.HealthPoint.HitDiceEntryR\ahitDice\x1aM\n" +
	"\fHitDiceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.character.AmountR\x05value:\x028\x01\"\x92\x03\n" +
	"\tCharacter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\x03R\x05owner\x12\x1d\n" +
	"\n" +
	"is_knocked\x18\x03 \x01(\bR\tisKnocked\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"class_name\x18\x05 \x01(\tR\tclassName\x12\x1a\n" +
	"\bsubclass\x18\x06 \x01(\tR\bsubclass\x12\x12\n" +
	"\x04race\x18\a \x01(\tR\x04race\x12(\n" +
	"\x03lvl\x18\b \x01(\v2\x16.character.LevelSystemR\x03lvl\x125\n" +
	"\x05stats\x18\t \x03(\v2\x1f.character.Character.StatsEntryR\x05stats\x12.\n" +
	"\x06health\x18\n" +
	" \x01(\v2\x16.character.HealthPointR\x06health\x1aL\n" +
	"\n" +
	"StatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.character.AbilityR\x05value:\x028\x01B0Z.github.com/alsadx/gm-protos/gen/go/characterv1b\x06proto3"

var (
	file_character_character_proto_rawDescOnce sync.Once
	file_character_character_proto_rawDescData []byte
)

func file_character_character_proto_rawDescGZIP() []byte {
	file_character_character_proto_rawDescOnce.Do(func() {
		file_character_character_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_character_character_proto_rawDesc), len(file_character_character_proto_rawDesc)))
	})
	return file_character_character_proto_rawDescData
}

var file_character_character_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_character_character_proto_goTypes = []any{
	(*Score)(nil),       // 0: character.Score
	(*Skill)(nil),       // 1: character.Skill
	(*Ability)(nil),     // 2: character.Ability
	(*LevelSystem)(nil), // 3: character.LevelSystem
	(*Amount)(nil),      // 4: character.Amount
	(*HealthPoint)(nil), // 5: character.HealthPoint
	(*Character)(nil),   // 6: character.Character
	nil,                 // 7: character.Ability.SkillsEntry
	nil,                 // 8: character.HealthPoint.HitDiceEntry
	nil,                 // 9: character.Character.StatsEntry
}
var file_character_character_proto_depIdxs = []int32{
	0, // 0: character.Ability.score:type_name -> character.Score
	7, // 1: character.Ability.skills:type_name -> character.Ability.SkillsEntry
	8, // 2: character.HealthPoint.hit_dice:type_name -> character.HealthPoint.HitDiceEntry
	3, // 3: character.Character.lvl:type_name -> character.LevelSystem
	9, // 4: character.Character.stats:type_name -> character.Character.StatsEntry
	5, // 5: character.Character.health:type_name -> character.HealthPoint
	1, // 6: character.Ability.SkillsEntry.value:type_name -> character.Skill
	4, // 7: character.HealthPoint.HitDiceEntry.value:type_name -> character.Amount
	2, // 8: character.Character.StatsEntry.value:type_name -> character.Ability
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_character_character_proto_init() }
func file_character_character_proto_init() {
	if File_character_character_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_character_character_proto_rawDesc), len(file_character_character_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_character_character_proto_goTypes,
		DependencyIndexes: file_character_character_proto_depIdxs,
		MessageInfos:      file_character_character_proto_msgTypes,
	}.Build()
	File_character_character_proto = out.File
	file_character_character_proto_goTypes = nil
	file_character_character_proto_depIdxs = nil
}
